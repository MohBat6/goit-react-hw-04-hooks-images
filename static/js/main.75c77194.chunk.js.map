{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","services/image-service.js","App.js","index.js","components/Modal/Modal.module.css"],"names":["SearchBar","onFormSubmit","useState","query","setQuery","className","onSubmit","event","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","value","ImageGalleryItem","handleImgClick","webformatURL","largeImageURL","src","alt","onClick","ImageGallery","images","map","id","Button","onBtn","Modal","toggleModal","children","modalRoot","useRef","document","querySelector","handleEscape","useCallback","code","useEffect","window","addEventListener","removeEventListener","createPortal","styles","backdrop","currentTarget","content","current","imagesApi","fetchImages","currentQuery","currentPage","axios","get","then","data","hits","App","setCurrentQuery","setCurrentPage","setImages","isLoading","setIsLoading","showModal","setShowModal","bigImage","setBigImage","imagesResponse","prevImages","finally","prevShowModal","Searchbar","length","color","height","width","timeout","prevCurrentPage","scrollTo","top","documentElement","scrollHeight","behavior","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.75c77194.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchBar = ({ onFormSubmit }) => {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleInput = event => {\r\n    setQuery(event.target.value);\r\n  };\r\n  const handleFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    onFormSubmit(query);\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleFormSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleInput}\r\n          value={query}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\nSearchBar.propTypes = {\r\n  onFormSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default SearchBar;","import React from 'react';\r\n\r\nconst ImageGalleryItem = ({ handleImgClick, webformatURL, largeImageURL }) => {\r\n  const onImageClick = src => {\r\n    handleImgClick(src);\r\n  };\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={webformatURL}\r\n        alt=\"\"\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={() => onImageClick(largeImageURL)}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ images, handleImgClick }) => (\r\n  <ul className=\"ImageGallery\">\r\n    {images.map(({ id, webformatURL, largeImageURL }) => (\r\n      <ImageGalleryItem\r\n        handleImgClick={handleImgClick}\r\n        key={id}\r\n        largeImageURL={largeImageURL}\r\n        webformatURL={webformatURL}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  handleImgClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onBtn }) => (\r\n  <button className=\"Button\" type=\"button\" onClick={onBtn}>\r\n    Load more\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  onBtn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import React, { useEffect, useRef, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Modal.module.css';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst Modal = ({ toggleModal, children }) => {\r\n  const modalRoot = useRef(document.querySelector('#root'));\r\n\r\n  const handleEscape = useCallback(\r\n    event => {\r\n      if (event.code === 'Escape') {\r\n        toggleModal();\r\n      }\r\n    },\r\n    [toggleModal],\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleEscape);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleEscape);\r\n    };\r\n  }, [handleEscape]);\r\n\r\n  const handleBackdrop = event => {\r\n    if (event.target === event.currentTarget) {\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={styles.backdrop} onClick={handleBackdrop}>\r\n      <div className={styles.content}>{children}</div>\r\n    </div>,\r\n    modalRoot.current,\r\n  );\r\n};\r\nModal.propTypes = {\r\n  toggleModal: PropTypes.func.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Modal;","import axios from 'axios';\r\n\r\nconst fetchImages = ({ currentQuery, currentPage = '1' }) =>\r\n  axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${currentQuery}&page=${currentPage}&key=22915499-86e114c687af7a9df784d9137&image_type=photo&orientation=horizontal&per_page=12\r\n`,\r\n    )\r\n    .then(({ data }) => data.hits);\r\n\r\nconst imagesApi = {\r\n  fetchImages,\r\n};\r\n\r\nexport default imagesApi;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\nimport imagesApi from './services/image-service';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\n\nconst App = () => {\n  const [currentQuery, setCurrentQuery] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [bigImage, setBigImage] = useState(null);\n\n  useEffect(() => {\n    populateImages();\n  }, [currentQuery, currentPage]);\n\n  const onFormSubmit = query => {\n    setCurrentQuery(query);\n    setCurrentPage(1);\n    setImages([]);\n  };\n\n  function populateImages() {\n    setIsLoading(true);\n    imagesApi\n      .fetchImages({ currentQuery, currentPage })\n      .then(imagesResponse => {\n        // setCurrentPage(prevCurrentPage => prevCurrentPage + 1);\n        setImages(prevImages => [\n          ...prevImages,\n          ...imagesResponse.map(({ id, webformatURL, largeImageURL }) => ({\n            id,\n            webformatURL,\n            largeImageURL,\n          })),\n        ]);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  const handleMoreClick = () => {\n    // populateImages();\n    setCurrentPage(prevCurrentPage => prevCurrentPage + 1);\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n  const handleImgClick = src => {\n    setBigImage(src);\n    setShowModal(true);\n  };\n  const toggleModal = event => {\n    setShowModal(prevShowModal => !prevShowModal);\n  };\n\n  return (\n    <div>\n      {showModal && (\n        <Modal toggleModal={toggleModal}>\n          <img src={bigImage} alt=\"\" />\n        </Modal>\n      )}\n      <Searchbar onFormSubmit={onFormSubmit} />\n      {images.length > 0 && (\n        <>\n          <ImageGallery handleImgClick={handleImgClick} images={images} />\n          {isLoading ? (\n            <Loader\n              type=\"Circles\"\n              color=\"#bd2745\"\n              height={70}\n              width={70}\n              timeout={3000}\n              className=\"Spinner\"\n            />\n          ) : (\n            <Button onBtn={handleMoreClick} />\n          )}\n        </>\n      )}\n      {isLoading && images.length === 0 && (\n        <Loader\n          type=\"Circles\"\n          color=\"#bd2745\"\n          height={70}\n          width={70}\n          timeout={3000}\n          className=\"Spinner\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3eLAO\",\"content\":\"Modal_content__3dbvp\"};"],"sourceRoot":""}